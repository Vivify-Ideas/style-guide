(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{383:function(e,t,i){"use strict";i.r(t);var a=i(45),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"react-review-guide"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#react-review-guide"}},[e._v("#")]),e._v(" React Review Guide")]),e._v(" "),i("p"),i("div",{staticClass:"table-of-contents"},[i("ul",[i("li",[i("a",{attrs:{href:"#react-guidelines"}},[e._v("React guidelines")])]),i("li",[i("a",{attrs:{href:"#redux-guidelines"}},[e._v("Redux guidelines")])])])]),i("p"),e._v(" "),i("h2",{attrs:{id:"react-guidelines"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#react-guidelines"}},[e._v("#")]),e._v(" React guidelines")]),e._v(" "),i("ul",[i("li",[e._v("Always use prop-types to define all the props in your components.")]),e._v(" "),i("li",[e._v("Use displayName to define a particular name for your component.")]),e._v(" "),i("li",[e._v("Use functional components for components that don’t use state.")]),e._v(" "),i("li",[e._v("Make sure you don’t edit props within a component (they are read-only).")]),e._v(" "),i("li",[e._v("Minimize logic in the render method. Logic should be in helper methods, container components or in Redux actions (if used).")]),e._v(" "),i("li",[e._v("Move all code with side effects (for example Ajax calls) out from the render methods.")]),e._v(" "),i("li",[e._v("Anything that it is state changing should be done via the setState method.")]),e._v(" "),i("li",[e._v("For parent-child communication, simply pass props.")]),e._v(" "),i("li",[e._v("Use ES6 features: spread/rest, destructuring, async/await, default values.")])]),e._v(" "),i("h2",{attrs:{id:"redux-guidelines"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#redux-guidelines"}},[e._v("#")]),e._v(" Redux guidelines")]),e._v(" "),i("ul",[i("li",[e._v("Reducers must be pure (deterministic).")]),e._v(" "),i("li",[e._v("Any logic with side effects (non-deterministic) (external services, async code) belongs in an action (via something like redux-thunk and/or redux-saga).")]),e._v(" "),i("li",[e._v("Containers read a store’s data through selectors.")]),e._v(" "),i("li",[e._v("Redux should store the minimal possible state, allowing Selectors to compute derived data.")]),e._v(" "),i("li",[e._v("Use Reselect for selectors that need to be memoized (like derived data). "),i("a",{attrs:{href:"https://en.wikipedia.org/wiki/Memoization",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://en.wikipedia.org/wiki/Memoization"),i("OutboundLink")],1)]),e._v(" "),i("li",[e._v("Normalize your data for better reducer composition.")]),e._v(" "),i("li",[e._v("action name: "),i("code",[e._v("<NOUN>_<VERB>")])]),e._v(" "),i("li",[e._v("action creator name: "),i("code",[e._v("<verb><Noun>")])]),e._v(" "),i("li",[e._v("selector name: "),i("code",[e._v("get<Noun>")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);